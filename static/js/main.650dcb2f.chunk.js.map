{"version":3,"sources":["firebase.js","DepartmentList.js","InputNewItem.js","RemoveItem.js","UpdateItem.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DepartmentList","value","disabled","Component","InputNewItem","handleInputChange","e","setState","userInput","target","handleDeptChange","dept","handleSubmit","preventDefault","itemNotCompletedArray","state","database","ref","child","push","onSubmit","this","className","htmlFor","type","id","onChange","placeholder","required","name","aria-label","icon","RemoveItem","remove","onClick","UpdateItem","handleShowDropdown","item","props","updatedItem","Object","values","showDropdownBool","showDropdown","itemToEdit","handleDeptUpdate","newDept","handleUpdateSubmit","deletePath","itemKey","updatedItemNotCompletedArray","dbRef","library","add","farEdit","farSave","farTrashAlt","farCheckSquare","farSquare","farPlusSquare","farMinusSquare","App","removeItemFromDb","deptOrAisle","on","data","val","departments","markCompleted","bool","completePath","update","0","enterItemError","firebaseDataObject","deptArray","keys","map","key","console","log","singleDept","i","itemsArray","completed","idKey","itemIds","index","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.650dcb2f.chunk.js","sourcesContent":["// firebase.js\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// initialize Firebase\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD8udE2U7TL4QkyIKPVceMFJozTsSvu9jQ\",\r\n    authDomain: \"jonathanlynprojectfive.firebaseapp.com\",\r\n    databaseURL: \"https://jonathanlynprojectfive.firebaseio.com\",\r\n    projectId: \"jonathanlynprojectfive\",\r\n    storageBucket: \"jonathanlynprojectfive.appspot.com\",\r\n    messagingSenderId: \"374788941465\",\r\n    appId: \"1:374788941465:web:ed5d089d392b3035eafa08\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import { Component, Fragment } from 'react';\r\n\r\n// drop down list locations\r\nclass DepartmentList extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <option value='choose location' disabled>Choose location</option>\r\n        <option value=\"don't know\">Don't know</option>\r\n        <option value='bakery'>Bakery</option>\r\n        <option value='dairy'>Dairy</option>\r\n        <option value='deli'>Deli</option>\r\n        <option value='freezer'>Freezer</option>\r\n        <option value='meat'>Meat</option>\r\n        <option value='misc.'>Misc.</option>\r\n        <option value='pharmacy'>Pharmacy</option>\r\n        <option value='produce'>Produce</option>\r\n        <option value='seafood'>Seafood</option>\r\n        <option value='aisle 1'>Aisle 1</option>\r\n        <option value='aisle 2'>Aisle 2</option>\r\n        <option value='aisle 3'>Aisle 3</option>\r\n        <option value='aisle 4'>Aisle 4</option>\r\n        <option value='aisle 5'>Aisle 5</option>\r\n        <option value='aisle 6'>Aisle 6</option>\r\n        <option value='aisle 7'>Aisle 7</option>\r\n        <option value='aisle 8'>Aisle 8</option>\r\n        <option value='aisle 9'>Aisle 9</option>\r\n        <option value='aisle 10'>Aisle 10</option>\r\n        <option value='aisle 11'>Aisle 11</option>\r\n        <option value='aisle 12'>Aisle 12</option>\r\n        <option value='aisle 13'>Aisle 13</option>\r\n        <option value='aisle 14'>Aisle 14</option>\r\n        <option value='aisle 15'>Aisle 15</option>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DepartmentList;","import { Component } from 'react';\r\nimport firebase from './firebase.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DepartmentList from './DepartmentList.js';\r\n\r\nclass InputNewItem extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userInput: '',\r\n      dept: 'choose location',\r\n    }\r\n  }\r\n\r\n  // set user input to state\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      userInput: e.target.value\r\n    })\r\n  }\r\n\r\n  // set dept chosen to state\r\n  handleDeptChange = (e) => {\r\n    this.setState({\r\n      dept: e.target.value\r\n    })\r\n  }\r\n\r\n  // submit function to send user inputs to firebase\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let inputted = this.state.userInput\r\n    let itemNotCompletedArray = [false, inputted]\r\n    const dbRef = firebase.database().ref();\r\n    dbRef.child(this.state.dept).push(itemNotCompletedArray);\r\n    this.setState({\r\n      userInput: ''\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        // condition to check if both input and location are chosen\r\n        onSubmit={(this.state.userInput !== '' && this.state.dept !== 'choose location')\r\n          ? this.handleSubmit\r\n          : null}\r\n        className='newItemForm'>\r\n        <div className='itemInput'>\r\n          {/* item input text area */}\r\n          <label htmlFor='newItem'>Item: </label>\r\n          <input\r\n            className='inputField'\r\n            type='text'\r\n            id='newItem'\r\n            value={this.state.userInput}\r\n            onChange={this.handleInputChange}\r\n            placeholder='Enter an item'\r\n            required\r\n          />\r\n        </div>\r\n        <div className='deptInput'>\r\n          {/* location dropdown */}\r\n          <label htmlFor='location'> Dept / aisle: </label>\r\n          <select\r\n            className='selectField'\r\n            name='location' id='location'\r\n            onChange={this.handleDeptChange}\r\n            value={this.state.dept}>\r\n            {/* location selections component */}\r\n            <DepartmentList\r\n              required\r\n            />\r\n          </select>\r\n          {/* button to submit user inputs */}\r\n          <button className='addButton' aria-label='add item to list'>\r\n            <FontAwesomeIcon\r\n              className='icon'\r\n              icon={['far', 'plus-square']}\r\n              type='submit'\r\n            />\r\n            <span className='addText'>Add</span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputNewItem;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n// remove item button\r\nconst RemoveItem = ({ remove }) => {\r\n        return (\r\n            <button onClick={ remove } aria-label='delete item from list' className='removeButton'>\r\n                <FontAwesomeIcon \r\n                    className='icon'\r\n                    icon={['far', 'minus-square']}\r\n                />\r\n                <span className='removeText'>Delete</span>\r\n            </button>\r\n        )\r\n    }\r\n\r\nexport default RemoveItem;","import { Component } from 'react';\r\nimport firebase from './firebase.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport DepartmentList from './DepartmentList.js';\r\n\r\nclass UpdateItem extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      itemToEdit: '',\r\n      newDept: \"don't know\",\r\n      showDropdown: false\r\n    }\r\n  }\r\n\r\n  // function to toggle dropdown menu to update location\r\n  handleShowDropdown = (e) => {\r\n    e.preventDefault();\r\n    const { item } = this.props;\r\n    let updatedItem = Object.values({ item })\r\n    let showDropdownBool = this.state.showDropdown\r\n    this.setState({\r\n      itemToEdit: updatedItem[0],\r\n      showDropdown: !showDropdownBool\r\n    })\r\n  }\r\n\r\n  // set new location to state\r\n  handleDeptUpdate = (e) => {\r\n    this.setState({\r\n      newDept: e.target.value,\r\n    })\r\n  }\r\n\r\n  // function to submit new location of chosen item to firebase\r\n  handleUpdateSubmit = (e) => {\r\n    let deletePath = `/${this.props.dept}/${this.props.itemKey}/`\r\n    e.preventDefault();\r\n    let newInputted = this.state.itemToEdit\r\n    let updatedItemNotCompletedArray = [false, newInputted]\r\n    const dbRef = firebase.database().ref();\r\n    dbRef.child(this.state.newDept).push(updatedItemNotCompletedArray)\r\n    dbRef.child(deletePath).remove()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='update'>\r\n        {/* edit button */}\r\n        <button onClick={this.handleShowDropdown} className='edit' aria-label='edit department'>\r\n          <FontAwesomeIcon\r\n            className='icon'\r\n            icon={['far', 'edit']}\r\n          />\r\n          <span className='editText'>Edit dept</span>\r\n        </button>\r\n        {/* condition to toggle updated location dropdown render */}\r\n        {\r\n          (this.state.showDropdown)\r\n            ? <form className='dropdownAndSave'>\r\n              <label htmlFor='location' ></label>\r\n              <select name='location' id='location' onChange={this.handleDeptUpdate} className='updateDeptDropdown'>\r\n                <DepartmentList />\r\n              </select>\r\n              <button onClick={this.handleUpdateSubmit} className='save' aria-label='save department change'>\r\n                <FontAwesomeIcon\r\n                  className='icon'\r\n                  icon={['far', 'save']}\r\n                />\r\n                <span className='saveText'>Save</span>\r\n              </button>\r\n            </form>\r\n            : null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default UpdateItem;\r\n\r\n\r\n","import './App.scss';\r\nimport { Component } from 'react';\r\nimport firebase from './firebase.js';\r\nimport InputNewItem from './InputNewItem.js';\r\nimport RemoveItem from './RemoveItem.js';\r\nimport UpdateItem from './UpdateItem.js';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEdit as farEdit, faSave as farSave, faTrashAlt as farTrashAlt, faCheckSquare as farCheckSquare, faSquare as farSquare, faPlusSquare as farPlusSquare, faMinusSquare as farMinusSquare } from '@fortawesome/free-regular-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nlibrary.add(farEdit, farSave, farTrashAlt, farCheckSquare, farSquare, farPlusSquare, farMinusSquare);\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      departments: [],\r\n      enterItemError: '',\r\n      newDept: ''\r\n    }\r\n  }\r\n\r\n  // connect to Firebase and get existing and updated data from the database\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref();\r\n    dbRef.on('value', (data) => {\r\n      const firebaseDataObject = data.val();\r\n      if (firebaseDataObject === null) {\r\n        this.setState({\r\n          enterItemError: 'Enter an item to your list'\r\n        })\r\n      } else {\r\n        let deptArray = Object.keys(firebaseDataObject).map((key) => {\r\n          return [(key), firebaseDataObject[key]];\r\n        })\r\n        console.log(deptArray);\r\n        this.setState({\r\n          departments: deptArray,\r\n          enterItemError: ''\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  // function to remove item\r\n  removeItemFromDb = (itemKey, dept) => {\r\n    const dbRef = firebase.database().ref();\r\n    let deptOrAisle = `/${dept[0]}/`;\r\n    dbRef.child(deptOrAisle + itemKey).remove();\r\n    dbRef.on('value', (data) => {\r\n      const firebaseDataObject = data.val();\r\n      if (firebaseDataObject === null) {\r\n        this.setState({\r\n          departments: []\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  // function to toggle item completed\r\n  markCompleted = (itemKey, dept, bool) => {\r\n    const dbRef = firebase.database().ref();\r\n    let completePath = `/${dept[0]}/${itemKey}/`;\r\n    if (bool === false) {\r\n      dbRef.child(completePath).update({ 0: true });\r\n    } else {\r\n      dbRef.child(completePath).update({ 0: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='contentWrapper'>\r\n        {/* header section */}\r\n        <header>\r\n          <h1>Aisle <span className='attack'>Attack!</span></h1>\r\n          <h2>A grocery list that stores the location of the stuff you want</h2>\r\n        </header>\r\n        {/* main content */}\r\n        <main >\r\n          {/* item input fields component */}\r\n          <InputNewItem />\r\n          <section className='wrapper'>\r\n            {/* message when no items on list */}\r\n            <h2 className='noItemErrorMsg'>{this.state.enterItemError}</h2>\r\n            {/* loop through items and location to render to screen */}\r\n            {\r\n              this.state.departments.map((singleDept, i) => {\r\n                let dept = singleDept;\r\n                let itemsArray = [];\r\n                let completed = []\r\n                for (let idKey in singleDept[1]) {\r\n                  const itemIds = [idKey, singleDept[1][idKey]];\r\n                  itemsArray.push(itemIds);\r\n                  completed.push(singleDept[1][idKey][0]);\r\n                }\r\n                return (\r\n                  <div key={i}>\r\n                    <ul className='itemsList'>\r\n                      <li>\r\n                        {/* show dept/aisle name */}\r\n                        <h3 className='location'>{singleDept[0]}</h3>\r\n                        {\r\n                          itemsArray.map((item, index) => {\r\n                            return (\r\n                              <ul key={item[0]} >\r\n                                <li className='addedItem'>\r\n                                  {/* edit dept component */}\r\n                                  <UpdateItem\r\n                                    item={item[1][1]}\r\n                                    itemKey={item[0]}\r\n                                    dept={dept[0]}\r\n                                  />\r\n                                  <div className='itemWrapper'>\r\n                                    {/* call function to toggle completed or not */}\r\n                                    <div\r\n                                      className='itemAndCheck'\r\n                                      onClick={() => { this.markCompleted(item[0], dept, item[1][0]) }}>\r\n                                      {/* conditional to toggle checked or not checked */}\r\n                                      <button aria-label='toggle completed'>\r\n                                        <FontAwesomeIcon\r\n                                          className='icon'\r\n                                          icon={(completed[index])\r\n                                            ? ['far', 'check-square']\r\n                                            : ['far', 'square']\r\n                                          } />\r\n                                      </button>\r\n                                      {/* conditional to toggle completed or not styling on item */}\r\n                                      <p\r\n                                        className={(completed[index])\r\n                                          ? 'done'\r\n                                          : 'notDone'\r\n                                        }>\r\n                                        {item[1]}\r\n                                      </p>\r\n                                    </div>\r\n                                  </div>\r\n\r\n\r\n                                  <RemoveItem\r\n                                    remove={() => {\r\n                                      this.removeItemFromDb(item[0], dept)\r\n                                    }}\r\n                                  />\r\n                                </li>\r\n                              </ul>\r\n                            )\r\n                          })\r\n                        }\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </section>\r\n        </main>\r\n        {/* footer section */}\r\n        <footer>\r\n          Crafted by <a href='https://www.joncraftscode.com'>jonCraftsCode</a> at <a href='https://junocollege.com'>Juno college</a>\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import './feast-of-flesh';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}